{"ast":null,"code":"var _jsxFileName = \"/Users/aarnihuuskonen/Documents/fullstack/part3/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport personService from './modules/coms';\nimport ShowPersons from './modules/Methods';\nimport ShowSingle from './modules/Methods';\nimport AddNew from './modules/Methods';\nimport Filter from './modules/Methods';\nimport Notification from './modules/Methods'; // const ShowPersons = (props) => {\n//   const filtered = props.filter === ''\n//   ? props.persons \n//   : props.persons.filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase())) \n//   return (\n//     <ul>\n//       {filtered.map(person =>\n//         <ShowSingle key = {person.id} id = {person.id} name = {person.name} number = {person.number} removePerson = {props.removePerson} > </ShowSingle>)}   \n//     </ul>\n//   )\n// }\n// const ShowSingle = (props) => {\n//   return (\n//     <li key = {props.id}>{props.name} {props.number} <button onClick = {() => props.removePerson(props.id)} >delete</button>  </li> \n//   )\n// }\n// const AddNew = (props) => {\n//   return (\n//     <div>\n//       <h2>Add new</h2>\n//       <form onSubmit={props.addPerson} >\n//         <div>\n//           name: <input \n//             value = {props.newName}\n//             onChange = {props.handleNameChange}\n//           />\n//         </div>\n//         <div>\n//           number: <input\n//             value = {props.newNumber}\n//             onChange = {props.handleNumberChange}\n//           />\n//         </div>\n//         <div>\n//           <button type=\"submit\">add</button>\n//         </div>\n//       </form>\n//     </div>\n//   )\n// }\n// const Filter = (props) => {\n//   return (\n//     <input \n//     value = {props.filter}\n//     onChange = {props.handleFilterChange}\n//     ></input>\n//   )\n// }\n// const Notification = (props) => {\n//   if (props.message === null) {\n//     return null\n//   } else if (props.message.includes(\"already\")) {\n//     return (\n//       <div className='error'>\n//         {props.message}\n//       </div>\n//     )\n//   }\n//   return (\n//     <div className='addition'>\n//     {props.message}\n//   </div>    \n//   )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleNameChange = event => {\n    event.preventDefault();\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    event.preventDefault();\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    event.preventDefault();\n    setFilter(event.target.value);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (persons.map(person => person.name === personObject.name).includes(true)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)) {\n        const id = persons.filter(person => person.name === newName)[0].id;\n        personService.update(id, personObject).then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== id ? person : returnedPerson));\n          setMessage(`Added ${newName}`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      }\n    } else {\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const removePerson = event => {\n    const removable = persons.filter(person => person.id === event);\n\n    if (window.confirm(`Delete ${removable[0].name}?`)) {\n      personService.remove(event).then(setPersons(persons.filter(person => person.id !== event))).catch(error => {\n        setMessage(`Information of ${removable.name} has already been deleted!`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n\n    setNewName('');\n    setNewNumber('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      handleFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddNew, {\n      addPerson: addPerson,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowPersons, {\n      persons: persons,\n      filter: filter,\n      removePerson: removePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"a1jz3qOEl/xsM3gDsucOFqrQ5eo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","personService","ShowPersons","ShowSingle","AddNew","Filter","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","message","setMessage","getAll","then","initialPersons","handleNameChange","event","preventDefault","target","value","handleNumberChange","handleFilterChange","addPerson","personObject","name","number","map","person","includes","window","confirm","id","update","returnedPerson","setTimeout","create","concat","removePerson","removable","remove","catch","error"],"sources":["/Users/aarnihuuskonen/Documents/fullstack/part3/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport personService from './modules/coms'\nimport ShowPersons from './modules/Methods'\nimport ShowSingle from './modules/Methods'\nimport AddNew from './modules/Methods'\nimport Filter from './modules/Methods'\nimport Notification from './modules/Methods'\n\n// const ShowPersons = (props) => {\n//   const filtered = props.filter === ''\n//   ? props.persons \n//   : props.persons.filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase())) \n//   return (\n//     <ul>\n//       {filtered.map(person =>\n//         <ShowSingle key = {person.id} id = {person.id} name = {person.name} number = {person.number} removePerson = {props.removePerson} > </ShowSingle>)}   \n//     </ul>\n//   )\n// }\n\n// const ShowSingle = (props) => {\n//   return (\n//     <li key = {props.id}>{props.name} {props.number} <button onClick = {() => props.removePerson(props.id)} >delete</button>  </li> \n//   )\n// }\n\n// const AddNew = (props) => {\n//   return (\n//     <div>\n//       <h2>Add new</h2>\n//       <form onSubmit={props.addPerson} >\n//         <div>\n//           name: <input \n//             value = {props.newName}\n//             onChange = {props.handleNameChange}\n//           />\n//         </div>\n//         <div>\n//           number: <input\n//             value = {props.newNumber}\n//             onChange = {props.handleNumberChange}\n//           />\n//         </div>\n//         <div>\n//           <button type=\"submit\">add</button>\n//         </div>\n//       </form>\n//     </div>\n//   )\n// }\n\n// const Filter = (props) => {\n//   return (\n//     <input \n//     value = {props.filter}\n//     onChange = {props.handleFilterChange}\n//     ></input>\n//   )\n// }\n\n// const Notification = (props) => {\n//   if (props.message === null) {\n//     return null\n//   } else if (props.message.includes(\"already\")) {\n//     return (\n//       <div className='error'>\n//         {props.message}\n//       </div>\n//     )\n//   }\n\n//   return (\n//     <div className='addition'>\n//     {props.message}\n//   </div>    \n//   )\n\n\n// }\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    event.preventDefault()\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    event.preventDefault()\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    event.preventDefault()\n    setFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if(persons.map(person => person.name ===  personObject.name).includes(true)) {\n      if(window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)) {\n        const id = persons.filter(person => person.name === newName)[0].id\n        personService\n          .update(id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n            setMessage(\n              `Added ${newName}`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n      }\n    } else {\n        personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage(\n            `Added ${newName}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n    }\n  \n  const removePerson = (event) => {\n    const removable = persons.filter(person => person.id === event)\n    if(window.confirm(`Delete ${removable[0].name}?`)) {\n      personService\n        .remove(event)\n        .then(setPersons(persons.filter(person => person.id !== event)))\n        .catch(error => {\n          setMessage(\n            `Information of ${removable.name} has already been deleted!`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          })\n      }\n      setNewName('')\n      setNewNumber('')      \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {message}></Notification>\n      <Filter filter = {filter} handleFilterChange = {handleFilterChange} ></Filter>\n      <AddNew addPerson = {addPerson} newName = {newName} handleNameChange = {handleNameChange} newNumber = {newNumber} handleNumberChange = {handleNumberChange}></AddNew>\n      <h2>Numbers</h2>\n      <ShowPersons persons = {persons} filter = {filter} removePerson = {removePerson} ></ShowPersons>\n    </div> \n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}